//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.1
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RED2.Properties {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RED2.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scan again ähnelt.
        /// </summary>
        internal static string btn_scan_again {
            get {
                return ResourceManager.GetString("btn_scan_again", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die red.config ähnelt.
        /// </summary>
        internal static string config_file {
            get {
                return ResourceManager.GetString("config_file", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die False ähnelt.
        /// </summary>
        internal static string default_clipboard_detection {
            get {
                return ResourceManager.GetString("default_clipboard_detection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 0 ähnelt.
        /// </summary>
        internal static string default_delete_mode {
            get {
                return ResourceManager.GetString("default_delete_mode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die True ähnelt.
        /// </summary>
        internal static string default_ignore_0kb_files {
            get {
                return ResourceManager.GetString("default_ignore_0kb_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die False ähnelt.
        /// </summary>
        internal static string default_ignore_errors {
            get {
                return ResourceManager.GetString("default_ignore_errors", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 10 ähnelt.
        /// </summary>
        internal static string default_infinite_loop_detection_count {
            get {
                return ResourceManager.GetString("default_infinite_loop_detection_count", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die True ähnelt.
        /// </summary>
        internal static string default_keep_system_folders {
            get {
                return ResourceManager.GetString("default_keep_system_folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die -1 ähnelt.
        /// </summary>
        internal static string default_max_depth {
            get {
                return ResourceManager.GetString("default_max_depth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 80 ähnelt.
        /// </summary>
        internal static string default_pause_between {
            get {
                return ResourceManager.GetString("default_pause_between", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleted {0} empty directories ({1} dir. could not be deleted / runtime: {2:D2}:{3:D2} min) ähnelt.
        /// </summary>
        internal static string delete_process_finished {
            get {
                return ResourceManager.GetString("delete_process_finished", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Delete process was aborted. ähnelt.
        /// </summary>
        internal static string deletion_aborted {
            get {
                return ResourceManager.GetString("deletion_aborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die False ähnelt.
        /// </summary>
        internal static string dont_scan_hidden_folders {
            get {
                return ResourceManager.GetString("dont_scan_hidden_folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Error: ähnelt.
        /// </summary>
        internal static string error {
            get {
                return ResourceManager.GetString("error", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Sorry, the path you picked is not a directory or does not exist! ähnelt.
        /// </summary>
        internal static string error_dir_does_not_exist {
            get {
                return ResourceManager.GetString("error_dir_does_not_exist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Ignore file settings are in a bad format! ähnelt.
        /// </summary>
        internal static string error_ignore_settings {
            get {
                return ResourceManager.GetString("error_ignore_settings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Only one folder can be accepted. ähnelt.
        /// </summary>
        internal static string error_only_one_folder {
            get {
                return ResourceManager.GetString("error_only_one_folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die C:\ ähnelt.
        /// </summary>
        internal static string folder {
            get {
                return ResourceManager.GetString("folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Found {0} empty directories (checked {1} / runtime: {2:D2}:{3:D2} min) ähnelt.
        /// </summary>
        internal static string found_x_empty_folders {
            get {
                return ResourceManager.GetString("found_x_empty_folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Contains &quot;trash&quot; ähnelt.
        /// </summary>
        internal static string icon_contains_trash {
            get {
                return ResourceManager.GetString("icon_contains_trash", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Empty ähnelt.
        /// </summary>
        internal static string icon_default {
            get {
                return ResourceManager.GetString("icon_default", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleted ähnelt.
        /// </summary>
        internal static string icon_deleted_folder {
            get {
                return ResourceManager.GetString("icon_deleted_folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Hidden ähnelt.
        /// </summary>
        internal static string icon_hidden_folder {
            get {
                return ResourceManager.GetString("icon_hidden_folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Locked ähnelt.
        /// </summary>
        internal static string icon_locked_folder {
            get {
                return ResourceManager.GetString("icon_locked_folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Protected ähnelt.
        /// </summary>
        internal static string icon_protected_folder {
            get {
                return ResourceManager.GetString("icon_protected_folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Root ähnelt.
        /// </summary>
        internal static string icon_root {
            get {
                return ResourceManager.GetString("icon_root", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Failed ähnelt.
        /// </summary>
        internal static string icon_warning {
            get {
                return ResourceManager.GetString("icon_warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die *.tmp\r\ndesktop.ini\r\nThumbs.db ähnelt.
        /// </summary>
        internal static string ignore_files {
            get {
                return ResourceManager.GetString("ignore_files", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die System Volume Information\r\nRECYCLER\r\nPapierkorb\r\nRecycled\r\nNtUninstall\r\n$RECYCLE.BIN\r\nGAC_MSIL ähnelt.
        /// </summary>
        internal static string ignore_folders {
            get {
                return ResourceManager.GetString("ignore_folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Please select the folder that you want to be cleaned ähnelt.
        /// </summary>
        internal static string please_select {
            get {
                return ResourceManager.GetString("please_select", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process was aborted. ähnelt.
        /// </summary>
        internal static string process_aborted {
            get {
                return ResourceManager.GetString("process_aborted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Process was cancelled! ähnelt.
        /// </summary>
        internal static string process_cancelled {
            get {
                return ResourceManager.GetString("process_cancelled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die RED deleted {0} directories for you :) ähnelt.
        /// </summary>
        internal static string red_deleted {
            get {
                return ResourceManager.GetString("red_deleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Remove empty dirs ähnelt.
        /// </summary>
        internal static string registry_name {
            get {
                return ResourceManager.GetString("registry_name", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Deleting empty directories ({0}/{1})... ähnelt.
        /// </summary>
        internal static string removing_empty_folders {
            get {
                return ResourceManager.GetString("removing_empty_folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Scanning directories... ähnelt.
        /// </summary>
        internal static string scanning_folders {
            get {
                return ResourceManager.GetString("scanning_folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Searching empty directories... ähnelt.
        /// </summary>
        internal static string searching_empty_folders {
            get {
                return ResourceManager.GetString("searching_empty_folders", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Started deletion process... ähnelt.
        /// </summary>
        internal static string started_deletion_process {
            get {
                return ResourceManager.GetString("started_deletion_process", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning! ähnelt.
        /// </summary>
        internal static string warning {
            get {
                return ResourceManager.GetString("warning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Warning, do you really want to delete empty system directories?\nThis may harm your operating system. ähnelt.
        /// </summary>
        internal static string warning_really_delete {
            get {
                return ResourceManager.GetString("warning_really_delete", resourceCulture);
            }
        }
    }
}
